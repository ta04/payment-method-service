// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payment-method.proto

package com_ta04_srv_payment_method

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PaymentMethod struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AccountNumber        string   `protobuf:"bytes,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountHolderName    string   `protobuf:"bytes,4,opt,name=account_holder_name,json=accountHolderName,proto3" json:"account_holder_name,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethod) Reset()         { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()    {}
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a487cb9e3da1e3, []int{0}
}

func (m *PaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethod.Unmarshal(m, b)
}
func (m *PaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethod.Marshal(b, m, deterministic)
}
func (m *PaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethod.Merge(m, src)
}
func (m *PaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentMethod.Size(m)
}
func (m *PaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethod proto.InternalMessageInfo

func (m *PaymentMethod) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethod) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *PaymentMethod) GetAccountHolderName() string {
	if m != nil {
		return m.AccountHolderName
	}
	return ""
}

func (m *PaymentMethod) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type IndexPaymentMethodsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexPaymentMethodsRequest) Reset()         { *m = IndexPaymentMethodsRequest{} }
func (m *IndexPaymentMethodsRequest) String() string { return proto.CompactTextString(m) }
func (*IndexPaymentMethodsRequest) ProtoMessage()    {}
func (*IndexPaymentMethodsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a487cb9e3da1e3, []int{1}
}

func (m *IndexPaymentMethodsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexPaymentMethodsRequest.Unmarshal(m, b)
}
func (m *IndexPaymentMethodsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexPaymentMethodsRequest.Marshal(b, m, deterministic)
}
func (m *IndexPaymentMethodsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexPaymentMethodsRequest.Merge(m, src)
}
func (m *IndexPaymentMethodsRequest) XXX_Size() int {
	return xxx_messageInfo_IndexPaymentMethodsRequest.Size(m)
}
func (m *IndexPaymentMethodsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexPaymentMethodsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexPaymentMethodsRequest proto.InternalMessageInfo

type Response struct {
	PaymentMethod        *PaymentMethod   `protobuf:"bytes,1,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Error                *Error           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	PaymentMethods       []*PaymentMethod `protobuf:"bytes,3,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a487cb9e3da1e3, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetPaymentMethod() *PaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetPaymentMethods() []*PaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a487cb9e3da1e3, []int{3}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*PaymentMethod)(nil), "com.ta04.srv.payment.method.PaymentMethod")
	proto.RegisterType((*IndexPaymentMethodsRequest)(nil), "com.ta04.srv.payment.method.IndexPaymentMethodsRequest")
	proto.RegisterType((*Response)(nil), "com.ta04.srv.payment.method.Response")
	proto.RegisterType((*Error)(nil), "com.ta04.srv.payment.method.Error")
}

func init() {
	proto.RegisterFile("payment-method.proto", fileDescriptor_75a487cb9e3da1e3)
}

var fileDescriptor_75a487cb9e3da1e3 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x7d, 0x69, 0x9b, 0x3e, 0x7b, 0x4b, 0x23, 0x9d, 0x16, 0x09, 0xd5, 0x45, 0x09, 0x14, 0x8a,
	0xe0, 0x20, 0x55, 0xd1, 0x0f, 0x50, 0xd0, 0x85, 0x45, 0x13, 0x5c, 0x97, 0x34, 0xb9, 0x98, 0xa8,
	0xc9, 0xc4, 0x99, 0x49, 0x6b, 0x7f, 0xc7, 0xff, 0xf0, 0x8f, 0xfc, 0x08, 0xe9, 0x24, 0x59, 0x04,
	0x34, 0xd8, 0x85, 0xdd, 0xcd, 0xdc, 0x7b, 0xe6, 0x9c, 0x73, 0xcf, 0x0d, 0x81, 0x7e, 0xe2, 0xae,
	0x22, 0x8c, 0xe5, 0x51, 0x84, 0x32, 0x60, 0x3e, 0x4d, 0x38, 0x93, 0x8c, 0xec, 0x7b, 0x2c, 0xa2,
	0xd2, 0x3d, 0x3e, 0xa5, 0x82, 0x2f, 0x68, 0x0e, 0xa1, 0x19, 0xc4, 0x7a, 0xd7, 0xa0, 0x73, 0x97,
	0x95, 0x6e, 0x55, 0x85, 0x18, 0x50, 0x0b, 0x7d, 0x53, 0x1b, 0x6a, 0x63, 0xdd, 0xae, 0x85, 0x3e,
	0x21, 0xd0, 0x88, 0xdd, 0x08, 0xcd, 0xda, 0x50, 0x1b, 0xb7, 0x6c, 0x75, 0x26, 0x23, 0x30, 0x5c,
	0xcf, 0x63, 0x69, 0x2c, 0x67, 0x71, 0x1a, 0xcd, 0x91, 0x9b, 0x75, 0xd5, 0xed, 0xe4, 0xd5, 0xa9,
	0x2a, 0x12, 0x0a, 0xbd, 0x02, 0x16, 0xb0, 0x17, 0x1f, 0xf9, 0x4c, 0x31, 0x35, 0x14, 0xb6, 0x9b,
	0xb7, 0xae, 0x55, 0x67, 0xba, 0xa6, 0xdd, 0x83, 0xa6, 0x90, 0xae, 0x4c, 0x85, 0xa9, 0x2b, 0x48,
	0x7e, 0xb3, 0x0e, 0x60, 0x70, 0x13, 0xfb, 0xf8, 0x56, 0x32, 0x2a, 0x6c, 0x7c, 0x4d, 0x51, 0x48,
	0xeb, 0x53, 0x83, 0x1d, 0x1b, 0x45, 0xc2, 0x62, 0x81, 0xe4, 0x1e, 0x8c, 0x7c, 0xc2, 0x59, 0x36,
	0xa1, 0x9a, 0xa4, 0x3d, 0x39, 0xa4, 0x15, 0x29, 0xd0, 0x12, 0xb1, 0xdd, 0x49, 0x4a, 0x81, 0x5c,
	0x80, 0x8e, 0x9c, 0x33, 0xae, 0x12, 0x68, 0x4f, 0xac, 0x4a, 0xa6, 0xab, 0x35, 0xd2, 0xce, 0x1e,
	0x10, 0x07, 0x76, 0xcb, 0x66, 0x84, 0x59, 0x1f, 0xd6, 0x37, 0x74, 0x63, 0x94, 0xdc, 0x08, 0xeb,
	0x0c, 0x74, 0x25, 0xb2, 0x5e, 0x8c, 0xc7, 0x7c, 0x54, 0x03, 0xb6, 0x6c, 0x75, 0x26, 0x26, 0xfc,
	0x8f, 0x50, 0x08, 0xf7, 0xb1, 0xd8, 0x57, 0x71, 0x9d, 0x7c, 0x34, 0xa0, 0x5f, 0x22, 0x76, 0x90,
	0x2f, 0x42, 0x0f, 0xc9, 0x12, 0x7a, 0xdf, 0x84, 0x4b, 0xce, 0x2b, 0x2d, 0xfe, 0xbc, 0x8e, 0xc1,
	0xa8, 0xf2, 0x61, 0xb1, 0x28, 0xeb, 0x1f, 0x09, 0xa0, 0xeb, 0x04, 0x6c, 0x59, 0xfe, 0xfa, 0x36,
	0x48, 0xe6, 0xf7, 0x4a, 0x21, 0x10, 0x47, 0x32, 0x8e, 0x5b, 0x90, 0x7a, 0x82, 0xde, 0x43, 0xe2,
	0xbb, 0x72, 0x1b, 0x5a, 0xcf, 0xd0, 0xbf, 0x44, 0x21, 0x39, 0x5b, 0xfd, 0xbd, 0xd8, 0xbc, 0xa9,
	0x7e, 0x26, 0x27, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xdb, 0xfc, 0x18, 0x64, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for PaymentMethodService service

type PaymentMethodServiceClient interface {
	IndexPaymentMethods(ctx context.Context, in *IndexPaymentMethodsRequest, opts ...client.CallOption) (*Response, error)
	ShowPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error)
	StorePaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error)
	UpdatePaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error)
	DestroyPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error)
}

type paymentMethodServiceClient struct {
	c           client.Client
	serviceName string
}

func NewPaymentMethodServiceClient(serviceName string, c client.Client) PaymentMethodServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.ta04.srv.payment.method"
	}
	return &paymentMethodServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *paymentMethodServiceClient) IndexPaymentMethods(ctx context.Context, in *IndexPaymentMethodsRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentMethodService.IndexPaymentMethods", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodServiceClient) ShowPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentMethodService.ShowPaymentMethod", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodServiceClient) StorePaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentMethodService.StorePaymentMethod", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodServiceClient) UpdatePaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentMethodService.UpdatePaymentMethod", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodServiceClient) DestroyPaymentMethod(ctx context.Context, in *PaymentMethod, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentMethodService.DestroyPaymentMethod", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PaymentMethodService service

type PaymentMethodServiceHandler interface {
	IndexPaymentMethods(context.Context, *IndexPaymentMethodsRequest, *Response) error
	ShowPaymentMethod(context.Context, *PaymentMethod, *Response) error
	StorePaymentMethod(context.Context, *PaymentMethod, *Response) error
	UpdatePaymentMethod(context.Context, *PaymentMethod, *Response) error
	DestroyPaymentMethod(context.Context, *PaymentMethod, *Response) error
}

func RegisterPaymentMethodServiceHandler(s server.Server, hdlr PaymentMethodServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&PaymentMethodService{hdlr}, opts...))
}

type PaymentMethodService struct {
	PaymentMethodServiceHandler
}

func (h *PaymentMethodService) IndexPaymentMethods(ctx context.Context, in *IndexPaymentMethodsRequest, out *Response) error {
	return h.PaymentMethodServiceHandler.IndexPaymentMethods(ctx, in, out)
}

func (h *PaymentMethodService) ShowPaymentMethod(ctx context.Context, in *PaymentMethod, out *Response) error {
	return h.PaymentMethodServiceHandler.ShowPaymentMethod(ctx, in, out)
}

func (h *PaymentMethodService) StorePaymentMethod(ctx context.Context, in *PaymentMethod, out *Response) error {
	return h.PaymentMethodServiceHandler.StorePaymentMethod(ctx, in, out)
}

func (h *PaymentMethodService) UpdatePaymentMethod(ctx context.Context, in *PaymentMethod, out *Response) error {
	return h.PaymentMethodServiceHandler.UpdatePaymentMethod(ctx, in, out)
}

func (h *PaymentMethodService) DestroyPaymentMethod(ctx context.Context, in *PaymentMethod, out *Response) error {
	return h.PaymentMethodServiceHandler.DestroyPaymentMethod(ctx, in, out)
}
